[project]
name = "napari-roxas-ai"
dynamic = ["version"]
description = "A plugin that integrates the ROXAS AI analysis methods for quantitative wood anatomy in the napari platform"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
  {name = "Nicola Antonio Santacroce"},
  {name = "Marc Katzenmaier"},
  {name = "Triyan Bhardwaj"},
  {name = "Georg von Arx"},
  {name = "The WSL Dendrosciences Group", email = "roxas@wsl.ch"},
]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Framework :: napari",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Image Processing",
]
requires-python = ">=3.9"
dependencies = [
    "magicgui==0.10.0",
    "napari[all]==0.5.6",
    "numpy>=2.0.2,<=2.1.3",
    "opencv-contrib-python-headless==4.11.0.86",
    "qtpy==2.4.3",
    "rasterio==1.4.3",
    "scikit-image>=0.24.0,<=0.25.2",
    "matplotlib>=3.9.4,<=3.10.1",
    # Linux (CUDA 12.1)
    "torch>=2.2.0,<2.8.0 ; sys_platform == 'linux' and platform_machine == 'x86_64'",
    "torchvision==0.22.0 ; sys_platform == 'linux' and platform_machine == 'x86_64'",
    # Windows (CUDA 12.1)
    "torch>=2.2.0,<2.7.0 ; sys_platform == 'win32' and platform_machine == 'AMD64'",
    "torchvision==0.21.0 ; sys_platform == 'win32' and platform_machine == 'AMD64'",
    # macOS/ARM (CPU-only fallback)
    "torch>=2.2.0,<2.7.0 ; sys_platform == 'darwin' or platform_machine == 'arm64'",
    "torchvision==0.21.0 ; sys_platform == 'darwin' or platform_machine == 'arm64'",
    "pytorch-lightning==2.5.1",
    "segmentation-models-pytorch==0.5.0",
    "albumentations==2.0.6",
    "hydra-core==1.3.2",
]

[project.optional-dependencies]
testing = [
    "tox==4.26.0",
    "pytest==8.3.5",  # https://docs.pytest.org/en/latest/contents.html
    "pytest-cov==6.1.1",  # https://pytest-cov.readthedocs.io/en/latest/
    "pytest-qt==4.4.0",  # https://pytest-qt.readthedocs.io/en/latest/
    "napari==0.5.6",
    "pyqt5==5.15.11",
]

[project.entry-points."napari.manifest"]
napari-roxas-ai = "napari_roxas_ai:napari.yaml"

[project.urls]
"Bug Tracker" = "https://github.com/roxas-ai/napari-roxas-ai/issues"
"Documentation" = "https://github.com/roxas-ai/napari-roxas-ai#README.md"
"Source Code" = "https://github.com/roxas-ai/napari-roxas-ai"
"User Support" = "https://github.com/roxas-ai/napari-roxas-ai/issues"

[build-system]
requires = ["setuptools>=42.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"*" = ["*.yaml"]


[tool.setuptools.dynamic]
version = {attr = "napari_roxas_ai.__init__.__version__"}

[tool.black]
line-length = 79
target-version = ['py38', 'py39', 'py310']

[tool.ruff]
line-length = 79
lint.select = [
    "E", "F", "W", #flake8
    "UP", # pyupgrade
    "I", # isort
    "BLE", # flake8-blind-exception
    "B", # flake8-bugbear
    "A", # flake8-builtins
    "C4", # flake8-comprehensions
    "ISC", # flake8-implicit-str-concat
    "G", # flake8-logging-format
    "PIE", # flake8-pie
    "SIM", # flake8-simplify
]
lint.ignore = [
    "E501", # line too long. let black handle this
    "UP006", "UP007", # type annotation. As using magicgui require runtime type annotation then we disable this.
    "SIM117", # flake8-simplify - some of merged with statements are not looking great with black, reanble after drop python 3.9
]

exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".mypy_cache",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "*vendored*",
    "*_vendor*",
]

target-version = "py38"
fix = true
